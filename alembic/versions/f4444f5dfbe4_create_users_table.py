"""create users table

Revision ID: f4444f5dfbe4
Revises: 
Create Date: 2025-07-07 01:16:54.316986

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql


# revision identifiers, used by Alembic.
revision: str = 'f4444f5dfbe4'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Use existing type for the enum without trying to create it
    op.execute("CREATE TABLE IF NOT EXISTS users ("
               "id UUID PRIMARY KEY, "
               "email VARCHAR(100) NOT NULL UNIQUE, "
               "full_name VARCHAR(100) NOT NULL, "
               "phone VARCHAR(20), "
               "hashed_password VARCHAR(255) NOT NULL, "
               "role role NOT NULL DEFAULT 'USER', "
               "verified BOOLEAN NOT NULL DEFAULT false, "
               "is_active BOOLEAN DEFAULT true, "
               "create_date TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), "
               "update_date TIMESTAMP WITH TIME ZONE)"
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###
